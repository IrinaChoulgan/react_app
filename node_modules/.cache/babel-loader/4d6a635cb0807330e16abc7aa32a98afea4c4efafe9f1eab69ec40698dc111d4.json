{"ast":null,"code":"var _jsxFileName = \"/Users/romanchoulgan/Desktop/my-app/src/components/TablePage/TablePage.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Table, Row, Col, Layout } from 'antd';\nimport { useEffect, useState } from 'react';\nimport s from '../TablePage/TablePage.module.css';\nimport { ModalWithForm } from '../ModalWithForm';\nimport fetchUsers from '../../services/users-api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TablePage = () => {\n  _s();\n  const [users, setUsers] = useState(null);\n  const columns = [{\n    title: 'id',\n    dataIndex: 'id',\n    key: 'id'\n  }, {\n    title: 'first_name',\n    dataIndex: 'first_name',\n    key: 'first_name'\n  }, {\n    title: 'last_name',\n    dataIndex: 'last_name',\n    key: 'last_name'\n  }, {\n    title: 'email',\n    dataIndex: 'email',\n    key: 'email'\n  }, {\n    title: 'gender',\n    dataIndex: 'gender',\n    key: 'gender'\n  }, {\n    title: 'ip_address',\n    dataIndex: 'ip_address',\n    key: 'ip_address'\n  }];\n  useEffect(() => {\n    fetchUsers().then(data => localStorage.setItem('users', JSON.stringify(data)));\n  }, []);\n  useEffect(() => {\n    fetchUsers().then(data => setUsers(data.map((Row, index) => ({\n      key: index,\n      id: Row.id,\n      first_name: Row.first_name,\n      last_name: Row.last_name,\n      email: Row.email,\n      gender: Row.gender,\n      ip_address: Row.ip_address\n    }))));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Layout.Header, {\n      style: {\n        backgroundColor: '#19202B'\n      },\n      children: \"Users Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalWithForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.table,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            dataSource: users,\n            columns: columns\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout.Footer, {\n      style: {\n        backgroundColor: '#19202B'\n      },\n      children: \"Footer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(TablePage, \"KhBIsY5gx4edH1ESuRNzpU6F9C8=\");\n_c = TablePage;\nvar _c;\n$RefreshReg$(_c, \"TablePage\");","map":{"version":3,"names":["React","Table","Row","Col","Layout","useEffect","useState","s","ModalWithForm","fetchUsers","TablePage","users","setUsers","columns","title","dataIndex","key","then","data","localStorage","setItem","JSON","stringify","map","index","id","first_name","last_name","email","gender","ip_address","backgroundColor","table"],"sources":["/Users/romanchoulgan/Desktop/my-app/src/components/TablePage/TablePage.tsx"],"sourcesContent":["import React from 'react';\nimport { Table, Row, Col, Layout } from 'antd';\nimport { useEffect, useState } from 'react';\n\nimport s from '../TablePage/TablePage.module.css';\n\nimport { ModalWithForm } from '../ModalWithForm';\n\nimport fetchUsers from '../../services/users-api';\n\ntype TablePageProps = {\n  users: {\n    id: number;\n    first_name: string;\n    last_name: string;\n    email: string;\n    gender: string;\n    ip_address: number;\n  };\n  fetchUsers: () => void;\n};\n\nexport const TablePage: React.FC<TablePageProps> = () => {\n  const [users, setUsers] = useState(null);\n\n  const columns = [\n    {\n      title: 'id',\n      dataIndex: 'id',\n      key: 'id'\n    },\n    {\n      title: 'first_name',\n      dataIndex: 'first_name',\n      key: 'first_name'\n    },\n    {\n      title: 'last_name',\n      dataIndex: 'last_name',\n      key: 'last_name'\n    },\n    {\n      title: 'email',\n      dataIndex: 'email',\n      key: 'email'\n    },\n    {\n      title: 'gender',\n      dataIndex: 'gender',\n      key: 'gender'\n    },\n    {\n      title: 'ip_address',\n      dataIndex: 'ip_address',\n      key: 'ip_address'\n    }\n  ];\n\n  useEffect(() => {\n    fetchUsers().then((data) => localStorage.setItem('users', JSON.stringify(data)));\n  }, []);\n\n  useEffect(() => {\n    fetchUsers().then((data) =>\n      setUsers(\n        data.map(\n          (\n            Row: {\n              id: number;\n              first_name: string;\n              last_name: string;\n              email: string;\n              gender: string;\n              ip_address: number;\n            },\n            index: number\n          ) => ({\n            key: index,\n            id: Row.id,\n            first_name: Row.first_name,\n            last_name: Row.last_name,\n            email: Row.email,\n            gender: Row.gender,\n            ip_address: Row.ip_address\n          })\n        )\n      )\n    );\n  }, []);\n\n  return (\n    <Layout>\n      <Layout.Header\n        style={{\n          backgroundColor: '#19202B'\n        }}\n      >\n        Users Table\n      </Layout.Header>\n      <ModalWithForm />\n      <div className={s.table}>\n        <Row>\n          <Col>\n            <Table dataSource={users} columns={columns} />\n          </Col>\n        </Row>\n      </div>\n      <Layout.Footer\n        style={{\n          backgroundColor: '#19202B'\n        }}\n      >\n        Footer\n      </Layout.Footer>\n    </Layout>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,GAAG,EAAEC,GAAG,EAAEC,MAAM,QAAQ,MAAM;AAC9C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAOC,CAAC,MAAM,mCAAmC;AAEjD,SAASC,aAAa,QAAQ,kBAAkB;AAEhD,OAAOC,UAAU,MAAM,0BAA0B;AAAC;AAclD,OAAO,MAAMC,SAAmC,GAAG,MAAM;EAAA;EACvD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMO,OAAO,GAAG,CACd;IACEC,KAAK,EAAE,IAAI;IACXC,SAAS,EAAE,IAAI;IACfC,GAAG,EAAE;EACP,CAAC,EACD;IACEF,KAAK,EAAE,YAAY;IACnBC,SAAS,EAAE,YAAY;IACvBC,GAAG,EAAE;EACP,CAAC,EACD;IACEF,KAAK,EAAE,WAAW;IAClBC,SAAS,EAAE,WAAW;IACtBC,GAAG,EAAE;EACP,CAAC,EACD;IACEF,KAAK,EAAE,OAAO;IACdC,SAAS,EAAE,OAAO;IAClBC,GAAG,EAAE;EACP,CAAC,EACD;IACEF,KAAK,EAAE,QAAQ;IACfC,SAAS,EAAE,QAAQ;IACnBC,GAAG,EAAE;EACP,CAAC,EACD;IACEF,KAAK,EAAE,YAAY;IACnBC,SAAS,EAAE,YAAY;IACvBC,GAAG,EAAE;EACP,CAAC,CACF;EAEDX,SAAS,CAAC,MAAM;IACdI,UAAU,EAAE,CAACQ,IAAI,CAAEC,IAAI,IAAKC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC,CAAC;EAClF,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACdI,UAAU,EAAE,CAACQ,IAAI,CAAEC,IAAI,IACrBN,QAAQ,CACNM,IAAI,CAACK,GAAG,CACN,CACErB,GAOC,EACDsB,KAAa,MACT;MACJR,GAAG,EAAEQ,KAAK;MACVC,EAAE,EAAEvB,GAAG,CAACuB,EAAE;MACVC,UAAU,EAAExB,GAAG,CAACwB,UAAU;MAC1BC,SAAS,EAAEzB,GAAG,CAACyB,SAAS;MACxBC,KAAK,EAAE1B,GAAG,CAAC0B,KAAK;MAChBC,MAAM,EAAE3B,GAAG,CAAC2B,MAAM;MAClBC,UAAU,EAAE5B,GAAG,CAAC4B;IAClB,CAAC,CAAC,CACH,CACF,CACF;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE,QAAC,MAAM;IAAA,wBACL,QAAC,MAAM,CAAC,MAAM;MACZ,KAAK,EAAE;QACLC,eAAe,EAAE;MACnB,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGY,eAChB,QAAC,aAAa;MAAA;MAAA;MAAA;IAAA,QAAG,eACjB;MAAK,SAAS,EAAExB,CAAC,CAACyB,KAAM;MAAA,uBACtB,QAAC,GAAG;QAAA,uBACF,QAAC,GAAG;UAAA,uBACF,QAAC,KAAK;YAAC,UAAU,EAAErB,KAAM;YAAC,OAAO,EAAEE;UAAQ;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA;MAC1C;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA,QACF,eACN,QAAC,MAAM,CAAC,MAAM;MACZ,KAAK,EAAE;QACLkB,eAAe,EAAE;MACnB,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGY;EAAA;IAAA;IAAA;IAAA;EAAA,QACT;AAEb,CAAC;AAAC,GA9FWrB,SAAmC;AAAA,KAAnCA,SAAmC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}